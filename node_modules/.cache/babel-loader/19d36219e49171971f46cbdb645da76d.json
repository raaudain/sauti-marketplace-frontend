{"ast":null,"code":"import { types } from \"../actions\";\nconst initialState = {\n  user: null,\n  isLoading: false,\n  isAuth: false,\n  isSuccess: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case types.CREATE_ACCOUNT_START:\n      return { ...state,\n        isLoading: true,\n        isAuth: false,\n        isSuccess: false,\n        errors: null,\n        user: {}\n      };\n\n    case types.CREATE_ACCOUNT_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        isAuth: false,\n        isSuccess: true,\n        errors: null,\n        user: {}\n      };\n\n    case types.CREATE_ACCOUNT_FAILURE:\n      return { ...state,\n        isLoading: false,\n        isAuth: false,\n        isSuccess: false,\n        errors: action.payload,\n        user: {}\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/ramon/Documents/web-projects/sauti-marketplace-frontend/src/store/reducers/createReducer.js"],"names":["types","initialState","user","isLoading","isAuth","isSuccess","error","state","action","type","CREATE_ACCOUNT_START","errors","CREATE_ACCOUNT_SUCCESS","CREATE_ACCOUNT_FAILURE","payload"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,MAAM,EAAE,KAHW;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;AAQA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,KAAK,CAACU,oBAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,SAAS,EAAE,IAFN;AAGLC,QAAAA,MAAM,EAAE,KAHH;AAILC,QAAAA,SAAS,EAAE,KAJN;AAKLM,QAAAA,MAAM,EAAE,IALH;AAMLT,QAAAA,IAAI,EAAE;AAND,OAAP;;AAQF,SAAKF,KAAK,CAACY,sBAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,MAAM,EAAE,KAHH;AAILC,QAAAA,SAAS,EAAE,IAJN;AAKLM,QAAAA,MAAM,EAAE,IALH;AAMLT,QAAAA,IAAI,EAAE;AAND,OAAP;;AAQF,SAAKF,KAAK,CAACa,sBAAX;AACE,aAAO,EACL,GAAGN,KADE;AAELJ,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,MAAM,EAAE,KAHH;AAILC,QAAAA,SAAS,EAAE,KAJN;AAKLM,QAAAA,MAAM,EAAEH,MAAM,CAACM,OALV;AAMLZ,QAAAA,IAAI,EAAE;AAND,OAAP;;AAQF;AACE,aAAOK,KAAP;AA7BJ;AA+BD,CAhCD","sourcesContent":["import { types } from \"../actions\";\n\nconst initialState = {\n  user: null,\n  isLoading: false,\n  isAuth: false,\n  isSuccess: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.CREATE_ACCOUNT_START:\n      return {\n        ...state,\n        isLoading: true,\n        isAuth: false,\n        isSuccess: false,\n        errors: null,\n        user: {}\n      };\n    case types.CREATE_ACCOUNT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isAuth: false,\n        isSuccess: true,\n        errors: null,\n        user: {}\n      };\n    case types.CREATE_ACCOUNT_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        isAuth: false,\n        isSuccess: false,\n        errors: action.payload,\n        user: {}\n      };\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}