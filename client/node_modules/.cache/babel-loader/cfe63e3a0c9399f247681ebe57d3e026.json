{"ast":null,"code":"import axiosWithAuth from \"../../utils/axiosWithAuth\";\nimport { types } from \"./index\";\nexport const logIn = credentials => dispatch => {\n  dispatch({\n    type: types.LOGIN_START\n  });\n  return axiosWithAuth().post(\"/auth/login\", credentials).then(res => {\n    // Sets token\n    localStorage.setItem(\"token\", res.data.token);\n    localStorage.setItem(\"user\", res.data.user);\n    dispatch({\n      type: types.LOGIN_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: types.LOGIN_FAILURE,\n      payload: err.response\n    });\n    console.log(err.response);\n  });\n};","map":{"version":3,"sources":["/Users/ramon/Documents/web-projects/sauti-marketplace-frontend/src/store/actions/authActions.js"],"names":["axiosWithAuth","types","logIn","credentials","dispatch","type","LOGIN_START","post","then","res","localStorage","setItem","data","token","user","LOGIN_SUCCESS","payload","catch","err","LOGIN_FAILURE","response","console","log"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,2BAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,OAAO,MAAMC,KAAK,GAAGC,WAAW,IAAIC,QAAQ,IAAI;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd,GAAD,CAAR;AACA,SAAON,aAAa,GACjBO,IADI,CACC,aADD,EACgBJ,WADhB,EAEJK,IAFI,CAECC,GAAG,IAAI;AACX;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,KAAvC;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,GAAG,CAACG,IAAJ,CAASE,IAAtC;AACAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,KAAK,CAACc,aAAd;AAA6BC,MAAAA,OAAO,EAAEP,GAAG,CAACG;AAA1C,KAAD,CAAR;AACD,GAPI,EAQJK,KARI,CAQEC,GAAG,IAAI;AACZd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,KAAK,CAACkB,aAAd;AAA6BH,MAAAA,OAAO,EAAEE,GAAG,CAACE;AAA1C,KAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,QAAhB;AACD,GAXI,CAAP;AAYD,CAdM","sourcesContent":["import axiosWithAuth from \"../../utils/axiosWithAuth\";\nimport { types } from \"./index\";\n\nexport const logIn = credentials => dispatch => {\n  dispatch({ type: types.LOGIN_START });\n  return axiosWithAuth()\n    .post(\"/auth/login\", credentials)\n    .then(res => {\n      // Sets token\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"user\", res.data.user);\n      dispatch({ type: types.LOGIN_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: types.LOGIN_FAILURE, payload: err.response });\n      console.log(err.response);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}